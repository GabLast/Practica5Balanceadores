#indica la version de Docker Compose utilizada
version: '3.8'
#Bloque de servicios, indica los contenedores a utilizar.
services:
  app-web:
    build: .
    env_file:
      - .env
    environment:
      - PORT=8080
    ports: #puertos que estaran expuestos.
      - "8080:8080"
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - mi-volumen-compose:/tmp/
    depends_on: #indica que primero debe subir los servicios indicados.
      - base-datos-app-web

  app-web-2:
    build: .
    env_file:
      - .env
    environment:
      - PORT=8081
    ports: #puertos que estaran expuestos.
      - "8081:8081"
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - mi-volumen-compose:/tmp/
    depends_on: #indica que primero debe subir los servicios indicados.
      - base-datos-app-web

  app-web-3:
    build: .
    env_file:
      - .env
    environment:
      - PORT=8082
    ports: #puertos que estaran expuestos.
      - "8082:8082"
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - mi-volumen-compose:/tmp/
    depends_on: #indica que primero debe subir los servicios indicados.
      - base-datos-app-web

  base-datos-app-web:
    image: mysql:5.7.26
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_USER=$DB_USER
      - MYSQL_DATABASE=$DB_NAME
    volumes: #volumen de datos utilizado.
      - ~/dato_mysql_compose:/var/lib/mysql
    networks:
      - red-app


networks: #bloque para las redes
  red-app:   #indicando la red definida

volumes: #Bloque para definir los volumenes
  mi-volumen-compose:
  